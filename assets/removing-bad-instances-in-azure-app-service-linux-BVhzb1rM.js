const B="data:text/markdown;base64,IyBSZW1vdmluZyBhbmQgQXV0b21hdGluZyBCYWQgSW5zdGFuY2VzIGluIEF6dXJlIEFwcCBTZXJ2aWNlIExpbnV4CipOb3ZlbWJlciAyNCwgMjAyNCoKKkpheSoKCgohW1JlbW92aW5nIGFuZCBBdXRvbWF0aW5nIEJhZCBJbnN0YW5jZXMgaW4gQXp1cmUgQXBwIFNlcnZpY2VdKC9pbWFnZXMvYmxvZy9yZW1vdmluZy1iYWQtaW5zdGFuY2VzLWluLWF6dXJlLWFwcC1zZXJ2aWNlLWxpbnV4LnBuZykKCk1hbmFnaW5nIHVuaGVhbHRoeSBpbnN0YW5jZXMgaW4gQXp1cmUgQXBwIFNlcnZpY2UgKExpbnV4KSBpbnZvbHZlcyBpZGVudGlmeWluZywgcmVib290aW5nLCBvciBhdXRvbWF0aW5nIHRoZSByZW1vdmFsIG9mIHByb2JsZW1hdGljIGluc3RhbmNlcy4gVGhpcyBndWlkZSB3aWxsIGhlbHAgeW91IG1hbmFnZSB1bmhlYWx0aHkgaW5zdGFuY2VzIG1hbnVhbGx5IGFuZCBsZXZlcmFnZSBBenVyZeKAmXMgYXV0b21hdGlvbiBmZWF0dXJlcyB0byBtYWludGFpbiB5b3VyIGFwcOKAmXMgYXZhaWxhYmlsaXR5IGFuZCBwZXJmb3JtYW5jZS4KCiMjIElkZW50aWZ5aW5nIHRoZSBQcm9ibGVtClRvIGRldGVybWluZSB3aGljaCBpbnN0YW5jZSBpcyB1bmhlYWx0aHksIHlvdSBjYW4gdXNlIEhlYWx0aCBDaGVja3M6CgoqIE5hdmlnYXRlIHRvICoqU2V0dGluZ3MgPiBIZWFsdGggQ2hlY2sqKiBpbiB0aGUgQXp1cmUgUG9ydGFsLgoqIERlZmluZSBhIGN1c3RvbSBlbmRwb2ludCAoZS5nLiwgL2hlYWx0aCkgdG8gY2hlY2sgaWYgaW5zdGFuY2VzIGFyZSByZXNwb25kaW5nIGNvcnJlY3RseS4KKiBNb25pdG9yIHRoZSBzdGF0dXMgb2YgaW5zdGFuY2VzIGluIHRoZSBJbnN0YW5jZXMgdGFiLCB3aGljaCB3aWxsIGZsYWcgdW5oZWFsdGh5IGluc3RhbmNlcy4KCiMjIFJlYm9vdGluZyBvciBSZW1vdmluZyBVbmhlYWx0aHkgSW5zdGFuY2VzCk9uY2UgYW4gaW5zdGFuY2UgaXMgaWRlbnRpZmllZCBhcyB1bmhlYWx0aHksIHlvdSBjYW4gcmVib290IG9yIHJlbW92ZSBpdDoKCioqUmVib290IHRoZSBJbnN0YW5jZToqKgoKKiBHbyB0byB0aGUgSW5zdGFuY2VzIHRhYiBpbiB5b3VyIFdlYiBBcHAgaW4gQXp1cmUgUG9ydGFsLgoqIExvY2F0ZSB0aGUgdW5oZWFsdGh5IGluc3RhbmNlIGFuZCBoaXQgUmVzdGFydCB0byByZWJvb3QgaXQuCiogUmVtb3ZlIHRoZSBJbnN0YW5jZSB2aWEgU2NhbGluZzoKCkdvIHRvIFNjYWxlIE91dCAoQXBwIFNlcnZpY2UgUGxhbikgaW4gdGhlIEF6dXJlIFBvcnRhbC4KClRlbXBvcmFyaWx5IHNjYWxlIGRvd24gdG8gMSBpbnN0YW5jZSwgd2hpY2ggd2lsbCByZW1vdmUgdGhlIGJhZCBpbnN0YW5jZS4KQWZ0ZXIgYSBmZXcgbWludXRlcywgc2NhbGUgYmFjayB1cCB0byAyIGluc3RhbmNlcy4gQXp1cmUgd2lsbCBjcmVhdGUgYSBmcmVzaCBpbnN0YW5jZSB0byByZXBsYWNlIHRoZSB1bmhlYWx0aHkgb25lLgoKIyMgTW9uaXRvcmluZyB3aXRoIEFwcGxpY2F0aW9uIEluc2lnaHRzIGFuZCBBbGVydHMKQXBwbGljYXRpb24gSW5zaWdodHMgaXMgYSBwb3dlcmZ1bCB0b29sIHRoYXQgaGVscHMgdHJhY2sga2V5IG1ldHJpY3MgbGlrZSByZXF1ZXN0IGZhaWx1cmVzLCByZXNwb25zZSB0aW1lcywgYW5kIHNlcnZlciBleGNlcHRpb25zLiBIZXJlJ3MgaG93IHRvIHNldCBpdCB1cDoKCioqRW5hYmxlIEFwcGxpY2F0aW9uIEluc2lnaHRzOioqCgoqIEluIHlvdXIgV2ViIEFwcOKAmXMgTW9uaXRvcmluZyBzZWN0aW9uLCBlbmFibGUgQXBwbGljYXRpb24gSW5zaWdodHMuCgoqKlNldCBBbGVydHM6KioKKiBHbyB0byBBenVyZSBNb25pdG9yID4gQWxlcnRzLgoqIENyZWF0ZSBhIG5ldyBhbGVydCBydWxlIGJhc2VkIG9uIGEgbWV0cmljLCBzdWNoIGFzIHJlc3BvbnNlIHRpbWVzIGV4Y2VlZGluZyAyIHNlY29uZHMgb3IgYSBoaWdoIGVycm9yIHJhdGUuCiogRGVmaW5lIEFjdGlvbiBHcm91cHMgdG8gbm90aWZ5IHlvdSB2aWEgZW1haWwsIFNNUywgb3IgaW50ZWdyYXRpb24gd2l0aCB0b29scyBsaWtlIFNsYWNrLgpDdXN0b20gRGFzaGJvYXJkczoKClNldCB1cCBjdXN0b20gZGFzaGJvYXJkcyB0byB2aXN1YWxpemUgdGhlIHBlcmZvcm1hbmNlIG9mIHlvdXIgYXBwLCB0cmFja2luZyBrZXkgbWV0cmljcyBzdWNoIGFzIENQVSB1c2FnZSwgbWVtb3J5LCBhbmQgZXJyb3IgcmF0ZXMsIGFsbG93aW5nIHlvdSB0byBwcm9hY3RpdmVseSBkZXRlY3QgYW55IHJlY3VycmluZyBpc3N1ZXMuCgojIyBBdXRvbWF0aW5nIHRoZSBIYW5kbGluZyBvZiBVbmhlYWx0aHkgSW5zdGFuY2VzCkF1dG8tSGVhbGluZyBhdXRvbWF0ZXMgdGhlIHJlY292ZXJ5IG9mIHlvdXIgYXBwIHdoZW4gaXQgZW5jb3VudGVycyBpc3N1ZXMgc3VjaCBhcyBzbG93IHJlc3BvbnNlcyBvciBoaWdoIG1lbW9yeSB1c2FnZS4gSGVyZeKAmXMgaG93IHRvIHNldCBpdCB1cDoKCiogR28gdG8gRGlhZ25vc2UgYW5kIFNvbHZlIFByb2JsZW1zID4gQXV0by1IZWFsLgoqIERlZmluZSBjdXN0b20gcnVsZXMgYmFzZWQgb24gdHJpZ2dlcnMgbGlrZSBzbG93IHJlcXVlc3RzLCBoaWdoIG1lbW9yeSB1c2FnZSwgb3Igc3BlY2lmaWMgSFRUUCBzdGF0dXMgY29kZXMuIEZvciBleGFtcGxlLCB5b3UgY2FuIGNvbmZpZ3VyZSBpdCB0byByZWN5Y2xlIHRoZSBhcHAgaWYgcmVzcG9uc2UgdGltZXMgZXhjZWVkIGEgY2VydGFpbiB0aHJlc2hvbGQgb3IgaWYgdG9vIG1hbnkgNTAwIGVycm9ycyBvY2N1ci4KKiBPbmNlIGNvbmZpZ3VyZWQsIEF1dG8tSGVhbCB3aWxsIGF1dG9tYXRpY2FsbHkgcmVzdGFydCBvciByZWN5Y2xlIHVuaGVhbHRoeSBpbnN0YW5jZXMgdG8gbWFpbnRhaW4geW91ciBhcHAncyBzdGFiaWxpdHkuCgpGb3IgZnVydGhlciBhdXRvbWF0aW9uLCB1c2UgUHJvYWN0aXZlIEF1dG8tSGVhbCwgd2hpY2ggYXV0b21hdGljYWxseSByZXN0YXJ0cyBpbnN0YW5jZXMgd2hlbiBtZW1vcnkgbGVha3Mgb3Igc2xvdyByZXNwb25zZXMgYXJlIGRldGVjdGVk4oCLCgoKIyMgQmVzdCBQcmFjdGljZXMKKiBMZXZlcmFnZSBIZWFsdGggQ2hlY2tzOiBTZXQgdXAgaGVhbHRoIGNoZWNrcyB0byBwcm9hY3RpdmVseSBkZXRlY3QgdW5oZWFsdGh5IGluc3RhbmNlcyBlYXJseS4KKiBVc2UgQXV0by1IZWFsaW5nOiBDb25maWd1cmUgY3VzdG9tIGF1dG8taGVhbCBydWxlcyB0byBhdXRvbWF0aWNhbGx5IHJlc3RhcnQgb3IgcmVjeWNsZSBiYWQgaW5zdGFuY2VzLgoqIEVuYWJsZSBBbGVydHM6IFNldCB1cCBhbGVydHMgaW4gQXBwbGljYXRpb24gSW5zaWdodHMgdG8gc3RheSBpbmZvcm1lZCBvZiBwZXJmb3JtYW5jZSBpc3N1ZXMgYW5kIHBvdGVudGlhbCBkb3dudGltZSBiZWZvcmUgdGhleSBhZmZlY3QgdXNlcnMuCiogTW9uaXRvciB3aXRoIEF6dXJlIE1vbml0b3I6IFVzZSBMb2cgQW5hbHl0aWNzIHRvIHRyYWNrIHdoZW4gYXV0by1oZWFsaW5nIGFjdGlvbnMgYXJlIHRyaWdnZXJlZCwgYW5kIHNldCB1cCBhbGVydHMgdG8gbm90aWZ5IHlvdSB3aGVuIHRoZXNlIGV2ZW50cyBvY2N1cuKAiwpBWlVSRQoKIyMgQ29uY2x1c2lvbgpBenVyZSBBcHAgU2VydmljZSAoTGludXgpIHByb3ZpZGVzIHNldmVyYWwgcm9idXN0IHRvb2xzIHRvIGlkZW50aWZ5LCByZXNvbHZlLCBhbmQgYXV0b21hdGUgdGhlIG1hbmFnZW1lbnQgb2YgdW5oZWFsdGh5IGluc3RhbmNlcy4gCgpMZXZlcmFnaW5nIEhlYWx0aCBDaGVja3MsIEF1dG8tSGVhbCwgYW5kIEFwcGxpY2F0aW9uIEluc2lnaHRzLCB5b3UgY2FuIGVuc3VyZSB5b3VyIGFwcGxpY2F0aW9uIHJlbWFpbnMgc3RhYmxlLCByZXNwb25zaXZlLCBhbmQgaGlnaGx5IGF2YWlsYWJsZSwgZXZlbiBkdXJpbmcgcGVhayBsb2FkcyBvciB1bmZvcmVzZWVuIGlzc3Vlcy4gCgpUaGVzZSBiZXN0IHByYWN0aWNlcyB3aWxsIGhlbHAgeW91IG1haW50YWluIHNtb290aCBvcGVyYXRpb25zIHdoaWxlIHJlZHVjaW5nIHRoZSBuZWVkIGZvciBtYW51YWwgaW50ZXJ2ZW50aW9ucy4=";export{B as default};
